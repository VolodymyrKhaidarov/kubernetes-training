apiVersion: v1
kind: Service
metadata:
  name: song-db
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5434
      targetPort: 5432
  selector:
    app: song-db

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: song-db
  namespace: {{ .Values.namespace }}
spec:
  serviceName: "song-db"
  selector:
    matchLabels:
      app: song-db
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: song-db
    spec:
      containers:
        - name: song-db
          image: postgres:16.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: app-secret
            - configMapRef:
                name: song-db-config
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: song-db-pvc
              mountPath: /var/lib/postgresql/data
            - name: song-db-init-vol
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: SONG_DB_INIT
      volumes:
        - name: song-db-init-vol
          configMap:
            name: song-db-config
  volumeClaimTemplates:
    - metadata:
        name: song-db-pvc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi